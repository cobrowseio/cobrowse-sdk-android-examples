name: Publish the sample app to Appetize.io

on:
  push:
    branches: [ master ]
    paths:
      - 'sample/**'
      - 'build.gradle'
      - '.github/workflows/appetize.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Get latest commit information
        run: |
          echo "GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_MESSAGE=$(git show -s --format=%s)" >> $GITHUB_ENV
      - name: Find SDK version
        run: |
          echo "COBROWSE_VERSION=$(cat sample/build.gradle | grep -oP 'io\.cobrowse\:cobrowse-sdk-android\:\K([0-9]+\.[0-9]+\.[0-9]+)')" >> $GITHUB_ENV
      - name: Set up secrets
        env:
          COBROWSE_SAMPLE_KEYSTORE_BASE_64: ${{ secrets.COBROWSE_SAMPLE_KEYSTORE_BASE_64 }}
          COBROWSE_SAMPLE_KEYSTORE_PROPERTIES: ${{ secrets.COBROWSE_SAMPLE_KEYSTORE_PROPERTIES }}
          COBROWSE_SAMPLE_GOOGLE_SERVICES_JSON: ${{ secrets.COBROWSE_SAMPLE_GOOGLE_SERVICES_JSON }}
          COBROWSE_STANDALONE_KEYSTORE_BASE_64: ${{ secrets.COBROWSE_STANDALONE_KEYSTORE_BASE_64 }}
          COBROWSE_STANDALONE_KEYSTORE_PROPERTIES: ${{ secrets.COBROWSE_STANDALONE_KEYSTORE_PROPERTIES }}
          COBROWSE_STANDALONE_GOOGLE_SERVICES_JSON: ${{ secrets.COBROWSE_STANDALONE_GOOGLE_SERVICES_JSON }}
        # Yes, python is the simplest way to write a Github secret into a file keeping new line breaks
        # https://github.com/orgs/community/discussions/24928#discussioncomment-6059242
        run: |
          python -c "import os; import base64;  file = open('sample/cobrowse.keystore',             'wb');  file.write(base64.b64decode(os.environ['COBROWSE_SAMPLE_KEYSTORE_BASE_64']        ));  file.close()"
          python -c "import os;                 file = open('sample/cobrowse.keystore.properties',  'w');   file.write(                 os.environ['COBROWSE_SAMPLE_KEYSTORE_PROPERTIES']      );  file.close()"
          python -c "import os;                 file = open('sample/google-services.json',          'w');   file.write(                 os.environ['COBROWSE_SAMPLE_GOOGLE_SERVICES_JSON']     );  file.close()"
          python -c "import os; import base64;  file = open('standalone/standalone.jks',            'wb');  file.write(base64.b64decode(os.environ['COBROWSE_STANDALONE_KEYSTORE_BASE_64']    ));  file.close()"
          python -c "import os;                 file = open('standalone/standalone.jks.properties', 'w');   file.write(                 os.environ['COBROWSE_STANDALONE_KEYSTORE_PROPERTIES']  );  file.close()"
          python -c "import os;                 file = open('standalone/google-services.json',      'w');   file.write(                 os.environ['COBROWSE_STANDALONE_GOOGLE_SERVICES_JSON'] );  file.close()"
      - name: Build the APKs
        run: |
          ./gradlew sample:assembleRelease
          ./gradlew standalone:assembleRelease
      - name: Upload APK to Appetize.io
        env:
          APPETIZE_API_TOKEN: ${{ secrets.AppetizeApiToken }}
          APPETIZE_APP_PUBLIC_KEY: ${{ secrets.AppetizeAppPublicKey }}
          GITHUB_SHA_SHORT: ${{ env.GITHUB_SHA_SHORT }}
          GITHUB_COMMIT_MESSAGE: ${{ env.GITHUB_COMMIT_MESSAGE }}
          COBROWSE_VERSION: ${{ env.COBROWSE_VERSION }}
        run: |
          curl --fail -X POST \
            https://$APPETIZE_API_TOKEN@api.appetize.io/v1/apps \
            -F "file=@sample/build/outputs/apk/release/sample-release.apk" \
            -F "platform=android" \
            -F "note=• Commit: $GITHUB_SHA_SHORT • Based on: $COBROWSE_VERSION • Message: \"$GITHUB_COMMIT_MESSAGE\""
